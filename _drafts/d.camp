세션1 - 인사담당자

LG전자 담당자


----------------------------------------------
조건
-가치창출 / -희소성 / -모방의 어려움 / - 비 대체성
*내가 대체가능한 개발자면 희소성이 없어
----------------------------------------------

*30대 초중반 -> 역량이 꺾여 생산성 그래프 기준 (?)
30대 중반 넘기전에 

고과 잘받는거랑 개발역량 키우는거랑은 좀 다른부분이 있어


# principle-agency problem
정보 비 대칭성
이해 상충
QCD, WBS

회사에서 뽑을때 플러스 알파를 낼 수 있는 인재인지 확인하려 함


# 연구개발인력 특성
- 성취감 및 성장감 중시

- 외적공정성 중시 
  *개발자들이 민감하게 반응해,  고만고만했던 애들이 나보다 돈을 더 받아, 남과비교 - 나를 갉아먹는 행위
  
- 자율성 중시

- 내향성

도메인,기술력 스펙 있는사람 뽑을건지 / 외향적이고 내향적인 사람들을 통합해서 융화할 수 있는 사람을 뽑을건지  조금씩 채용목표에 따라 달라지기도 함


# 우수한 SW개발자 핵심 3가지
- 프로그래밍 능력 : 우수한 개발자 문제가 주어지는 순간 어떤 언어,로직으로 구현해야겠다는 방안 머리속에 그려짐
- 도메인 지식 : 프로그래밍을 잘하는 개발자는 직무간(도메인 간) 전환도 매우 빠르게 적응. 다른 도메인에서 구현된 결과물 보고 빠르게 이해 및 적용
- 콜라보레이션 : 다양한 요구사항으로 인해 소스코드 양 매우 방대해져서 절대로 혼자 진행 X
>> 좋은개발자는 자기업무 외적으로 다른 파트도 도와주고 하더라

>> 요구사항 분석에 많은 시간 투자 / 분석하면서 구현까지 고려 (문제해겨 인식/정의 제대로 함)


넓게 알면서 깊게 들어가는 지식이 2,3개 정도 있어야해  T자형 인재


*내향적인 사람들이 많이 모여있는데 협업이 굉장히 중요해



# 면접 평가기준
- 경력은 즉시투입 가능인력을 찾아. 기본기외에 도메인 업무경험 풍부한지 여부 위주로 평가
*표현,태도,자세,마인드,일관성,전문성등에 대해 정량적, 정성적 평가.

채용담당자 면접부터 입사까지 계속 컨텍하게돼,,  채용담당자와 얘기를 많이하게 돼,, 채용담당자와 관계 중요
(입사 후 초반에 빌붙을만한 곳이 없어)


# 리더
- 기술능력만 탁월한 유형 >> 위험,  경영능력이 없어 말아먹기 쉬움


#애플리케이션 개발자보다 HW지식이 있는 BSP 개발자가 훨씬 더 대우받음
low level로 내려갈 필요가 있어.
통상 일을통한 성장이 70%, 교육은 10%정도, 동료 20% 영향을 받음

------------------------------------------------------------



SI회사 도메인을 깨고 넘어가는 방법.
확장가능하구나.

업무외에 개인적으로 도메인 확장을 이뤄가는지,
재밌어서 하는사람 - 눈에 보여. 뽑아.
어디다가 잘 정리가 되어야,, 나의 습관으로 쌓여 역량이.
고유한 내적인특성 // 의도적으로 바꿔서.

------------------------------------------------------------

큰기업에선 깊은 도메인을 보는거 같고
중견,중소 입장에선 채용담당자 성향에 따라 많이 좌우돼, 일반화 되어있지 않아서.  다양한 도메인경험 중요하게 보는듯해



단순히 해당도메인에 대한 경험만 있는걸로는 안돼
내 도메인, 기술 바운더리에 대한 자신감. 정량적, 정성적 자료 필요해
충분한 고민 / 자신감

======================================================================
======================================================================
======================================================================
======================================================================


# 세션 2

개발과 업무 경계에서 - @김범준

개발이 즐거운가?
일, 업무가 즐거운가?
>> 즐겁지 않으면?

왜 즐겁지 않은게 문제가 될까?
*즐기면 성장속도가 달라져,,

개발=일=업무=즐거움

*지루함을 변화하는방법 : 일의 양을 늘리거나, 기타목표를 세우거나
*실력에 비해 높은 난이도 : 툴의 개선, 페어프로그래밍 등을 통해 난이도는 낮추는 노력,, / 업무를 줄이거나

----------------------------------------------------------------------------
#이경일 - 어떻게하면 추천받는 개발자가 될 수 있는가

1.경력공채
2.수시채용
 +사내추천 있으면 좋아.
 
 -유리한점
  추천사가 내부정보를 알려줄수있어.
  서류가 통과될 경우가 높아 (추천자와 같은조직에 지원한 경우)
  *추천자랑 동일조직인지 체크하는 부분이 있다고 함 (내부자들이 볼 수 있게)
  리스크가 적다
  
  - 어떻게하면 추천받는 개발자가 될건가
  *현 직장동료와 좋은관계 유지 (그 사람이 어디로 이직할지 모르기 떄문) / 커뮤니케이션. 협업능력
   - 기획자인데 개발자를 추천하는 경우도 꽤 있어 
  *현재 본인 업무 최선을 다해서 일해라. 자신서비스의 오너쉽,전문성.도메인에 대한 이해
    -아무래도 도메인이 다르면 떨어질 확률 높아
  * 자신이 했던일 표현 적극적으로!!
    - 깃헙.  커밋 날짜가 일주일이내라던지,, / 사내플젝소스를 올려둔다던지
      세미나 연사로 참여해서 발표한다던지. (기술 세미나)
  *개발 컨퍼런스 적극적 참여 하는게 좋다.  (deview, 스프링캠프, meetup 등)
   
  >>이거중에 두 가지 충족되면 추천한다. 연사님 개인적으로의 기준이지만 중요해
  but!!!!  네 가지 다 충족해도 인성이 가장 중요해..  독불장군형 같은 사람들... (a.k.a 박지훈 팀장?)
  
  >> 이 사람한테 일을 맡기면 해결할 수 있어 -> 라는 인식을 다른사람이 갖게끔 노력해야
----------------------------------------------------------------------------
# 관리자와 개발자

- 관리자역할을 강요받게 돼  연차가 차면

- 기술리더, 개발자와 차이점.  기술외적인 이슈들도 책임지고 해결해야하는 위치
----------------------------------------------------------------------------

# 좌담회

Q. 협업하기 힘든타입, 안맞는 부서
- 개발 외길인생. 모든 대화할때 개발얘기만. 개발도 잘하고 천재적인 사람인데.. 온갖 커스터마이징 해놔서 쫓아가봤더니 다 바꿔놔서 고치기 힘들었어.
 >> 같이얘기해서 바꿔야하는데, 자기가 재밌으니까 바꾸고  공유도 안해두고. 문제해결이 어려웠다.
- 커뮤니케이션 부족한사람.  근거/공감능력 
 >> 코드리뷰나, 아키텍쳐에 대한 대화  상대주장에 대한 이해. 설득하려는 근거.  직책이나 직급으로 누르는 사람 좋지않아
- 보안팀이랑 협업하기 힘들었어.  본인 생각에 대한 논리적근거. 굉장히 방어적인태도나 강한 자존심


-실력이 모자라, 성장 / 개발자로서 성장한다는 것의 의미 / 개발실력성장이 이직과 승진에 영향이 되는지
* 문제해결, 의사결정 얼마나 잘하는가가 포인트
 - 얼마나 논리적토대를 만들어서 결론 도달
 - 하나의 문제에 대해 다각도로 볼 수 있는지.  (한줄 바꿨는데 엄청난 영향도가 발생한다던지)
 
 레거시 - 여러 개발자들의 고충 해결등이 모여있는 집합체,,
  *단순히 버려야만 하는 대상 아니야
  
 카카오는 수평구조라서. 승진한다고 연봉이 오르진않아
 성과 - 인센 / 역량 - 연봉,,
 
 내가 한 행동을 동료들에게 알리고 피드백을 받아라.
 
 --------------
 
 DBA -> Spring개발과 같이 다른포지션으로 넘어가는거.
 *뭔가 자신이 준비한것들을 보여줘야한다.  //  아직못했는데 들어가면 잘 할 수 있다? -> xxxxx 이거 안돼
  깃헙 보여줄수있냐. 최근읽은 기술서적. 개인적으로 진행한 개인플젝이라던지
  경력이 많은걸 원하는 포지션이면 서류에서 떨어질거고,
  문턱이 낮은곳을 지원한다면, 얼마나 빠르게 이사람이 기술전환이 가능한지. 열정과 근거!
  
  
  
======================================================================
======================================================================
======================================================================
======================================================================


세션3


#3-1
apes0123@gmail.com  >> 조은 네이버 개발자

언어를 잘하는게아니라 프로그래밍을 잘해야한다

나를 필요로하는 회사로 가자
->내가 잘하는일 솎아내기,,

-내가잘하는점, 못하는것. (면접한번보면 내가 못하는점 확인 가능해)
-어디에 초점 맞춰야하는지



 
#3-2
fb.com/wanbok  최완복

프리랜서로 살아남는법
-선택이유   4년차쯤 됐는데,   경력으로 삼기에는 애매한것들.

야생생존법
- 환경과성향, 선택이 달라  사람마다 다르니까 걸러서 들어
  플젝 기간짧게 들어와,, 중간에 엎어지는 경우도 있고,, 
  본인어필이 필요해  -> 지속적 일감, 기술력 확보
  
  
  커뮤니티 활동 - 신기술 동향, 행사소식 파악 가능
  "카카오에서 까인 사람들의 모임"
  
  
  
#3-3 굿닥

20년차 개발자로 살아남는법

- peer review 가능한 환경 꼭 만들어라.
  누군가 리뷰, 피드백해줄 사람 있어야!!
  
- 솔루션 or 프레임워크 주요 커미터가 되자


20년차 - 아주띄어난 기술능력 갖고있는것보단, 대화가 잘되고 의사결정에 도움을 줘


+++++++++++++ 좌담회

좋은개발자의 기준

- 업무이외의 개발. 즐기기때문에 하는것.
- 의사결정을 할 수 있는 수준에 올랐을때 시니어라고 생각해

- A/B급 

*과다품질이 많아.  현업을 보면. 역량이 높으면 간단하게 짜.
 너무 프레임웤에 의존한다거나.
 우리팀. 우리회사. 우리비지니스에 적정한 수준의 개발을 하는 사람.
 